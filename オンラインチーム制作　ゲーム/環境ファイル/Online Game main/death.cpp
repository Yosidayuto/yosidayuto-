//=============================================================================
//
// 死亡アニメーション処理 [death.cpp]
// Author : 俵谷 健太郎
//
//=============================================================================
#include "death.h"
#include "manager.h"

//=============================================================================
//静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 CDeath::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CDeath::CDeath()
{
	m_nCountAnime = 0;
	m_nPatternAnime = 0;
}

//=============================================================================
// デストラクタ
//=============================================================================
CDeath::~CDeath()
{
}

//=============================================================================
// テクスチャ読み込み
//=============================================================================
HRESULT CDeath::Load(void)
{
	//デバイスの取得
	LPDIRECT3DDEVICE9 pD3DDevice = CManager::GetRenderer()->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pD3DDevice, DEATH_TEXTURE, &m_pTexture);

	return S_OK;
}

//=============================================================================
// テクスチャ破棄
//=============================================================================
void CDeath::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// 作成処理
//=============================================================================
CDeath * CDeath::Create(D3DXVECTOR3 size)
{
	CDeath *pDeath;
	//インスタンス生成
	pDeath = new CDeath;

	//初期化処理
	if (pDeath != NULL)
	{
		pDeath->Init(size);
	}

	return pDeath;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CDeath::Init(D3DXVECTOR3 size)
{
	CScene2D::Init(size);

	//アニメーション情報セット
	CScene2D::SetAnimation((float)m_nPatternAnime, DEATH_ANIMATION);

	//テクスチャ割り当て
	BindTexture(m_pTexture);

	return S_OK;
}

//=============================================================================
// 終了処理
//=============================================================================
void CDeath::Uninit(void)
{
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CDeath::Update(void)
{
	m_nCountAnime++;
	//アニメーション速度
	if (m_nCountAnime >= 4.5f)
	{
		//アニメーション情報セット
		CScene2D::SetAnimation((float)m_nPatternAnime, DEATH_ANIMATION);

		m_nPatternAnime++;

		m_nCountAnime = 0;
		//最大までカウントしたら
		if (m_nPatternAnime >= DEATH_ANIMATION)
		{
			Uninit();
		}
	}
}

//=============================================================================
// 描画処理
//=============================================================================
void CDeath::Draw(void)
{
	CScene2D::Draw();
}

