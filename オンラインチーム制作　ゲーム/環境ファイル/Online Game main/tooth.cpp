//=============================================================================
//
// 歯のテクスチャ処理 [tooth.cpp]
// Author : 俵谷健太郎　若山言稀
//
//=============================================================================
#include "tooth.h"
#include "manager.h"

//=============================================================================
//静的メンバ変数宣言
//=============================================================================
LPDIRECT3DTEXTURE9 CTooth::m_pTexture = NULL;

//=============================================================================
// コンストラクタ
//=============================================================================
CTooth::CTooth()
{
}

//=============================================================================
// デストラクタ
//=============================================================================
CTooth::~CTooth()
{
}

//=============================================================================
// テクスチャ読み込み
//=============================================================================
HRESULT CTooth::Load(void)
{
	//デバイスの取得
	LPDIRECT3DDEVICE9 pD3DDevice = CManager::GetRenderer()->GetDevice();

	// テクスチャの生成
	D3DXCreateTextureFromFile(pD3DDevice, POLYGON_TEXTURE, &m_pTexture);

	return S_OK;
}

//=============================================================================
// テクスチャ破棄
//=============================================================================
void CTooth::Unload(void)
{
	// テクスチャの破棄
	if (m_pTexture != NULL)
	{
		m_pTexture->Release();
		m_pTexture = NULL;
	}
}

//=============================================================================
// ポリゴン作成処理
//=============================================================================
CTooth * CTooth::Create(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	CTooth *pNumber;
	//インスタンス生成
	pNumber = new CTooth;

	//初期化処理
	if (pNumber != NULL)
	{
		pNumber->Init(pos, size);
	}

	return pNumber;
}

//=============================================================================
// 初期化処理
//=============================================================================
HRESULT CTooth::Init(D3DXVECTOR3 pos, D3DXVECTOR3 size)
{
	//テクスチャ設定
	BindTexture(m_pTexture);
	//初期化処理
	CScene2D::Init(size);
	//位置設定
	SetPosition(pos);

	SetCol(D3DCOLOR_RGBA(0, 0, 0, 255));

	return S_OK;

}

//=============================================================================
// 終了処理
//=============================================================================
void CTooth::Uninit(void)
{
	CScene2D::Uninit();
}

//=============================================================================
// 更新処理
//=============================================================================
void CTooth::Update(void)
{
}

//=============================================================================
// 描画処理
//=============================================================================
void CTooth::Draw(void)
{
	CScene2D::Draw();
}

//=============================================================================
// カラー処理
//=============================================================================
void CTooth::Color(void)
{
	SetCol(D3DCOLOR_RGBA(255, 255, 255, 255));
}

//=============================================================================
// 回転処理
//=============================================================================
void CTooth::SetRotation(float fAngle)
{
	SetRotate(fAngle);
}




